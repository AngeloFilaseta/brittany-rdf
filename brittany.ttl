@prefix dbo: <http://dbpedia.org/ontology/> .
@prefix dbr: <http://dbpedia.org/resource/> .
@prefix dco: <https://w3id.org/dco#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix hctl: <https://www.w3.org/2019/wot/hypermedia#> .
@prefix jsonschema: <https://www.w3.org/2019/wot/json-schema#> .
@prefix m3: <http://sensormeasurement.appspot.com/m3#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix seas: <https://w3id.org/seas/> .
@prefix td: <https://www.w3.org/2019/wot/td#> .
@prefix wotsec: <https://www.w3.org/2019/wot/security#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# ========================== CONCEPTS (CLASSES) ==========================
# They are abstractions of the domain.

<#Greenhouse>
    a rdfs:Class ;
    rdfs:label "Greenhouse (Brittany)", "Serra (Brittany)"@it ;
    rdfs:comment "A greenhouse in which the \"Brittany\" software is used.", "Una serra in cui viene utilizzato il software \"Brittany\"."@it ;
    owl:equivalentClass seas:Greenhouse ;
    rdfs:seeAlso "https://github.com/Tale152/brittany" .

<#Monitorable>
    a rdfs:Class ;
    rdfs:label "Monitorable (Brittany)", "Monitorabile (Brittany)"@it ;
    rdfs:comment "A space or area that can be monitored by an Edge device.", "Uno spazio o un'area che può essere monitorata da un dispositivo Edge"@it .

<#Environment>
    rdfs:subClassOf <#Monitorable> , dco:Space ;
    rdfs:label "Environment (Brittany)", "Ambiente (Brittany)"@it ;
    rdfs:comment "Section of a Greenhouse in which the \"Brittany\" software is used. An Environment contains Plants. A greenhouse is composed of at least one Environment.", "Sezione di una Serra in cui viene utilizzato il software \"Brittany\". Un ambiente contiene delle piante. Una serra è composta da almeno un Ambiente."@it .

<#Plant>
    rdfs:subClassOf <#Monitorable> , dco:Space ;
    rdfs:label "Plant (Brittany)", "Pianta (Brittany)"@it ;
    rdfs:comment "Vegetal unit contained in an Environment in the Greenhouse", "Unità vegetale contenuta all’interno di un Ambiente della Serra."@it ;
    owl:equivalentClass dbo:Plant .

<#Edge>
    a rdfs:Class ;
    rdfs:label "Edge (Brittany)", "Edge (Brittany)"@it ;
    rdfs:comment "A digital electronic machine that collect data from Sensor and can manipulate Actuators. An Edge in composed by Modules. An Edge can be placed in an Ambient or on a Plant.", "Una macchina elettronica che colleziona dati dai Sensori e che può manipolare degli Attuatori. Un Edge è composto da Moduli. Un Edge può essere posizionato in un Ambiente o su una Pianta."@it;
    owl:equivalentClass dco:Device .

# ----- Modules -----

# TODO Add constraint:
# - Module MUST have a <#moduleName>
<#Module>
    a rdfs:Class ;
    rdfs:label "Module (Brittany)", "Modulo (Brittany)"@it ;
    rdfs:comment "A logical component that can be added to an Edge and is made of OperationHandlers.", "Un componente logico che può essere aggiunto ad un Edge ed è composto da OperationHandlers."@it .

<#ComponentModule>
    rdfs:subClassOf <#Module> ;
    rdfs:label "Component Module (Brittany)", "Modulo di Componenti (Brittany)"@it ;
    rdfs:comment "A Module that can interact with some Hardware Component.", "Un Modulo che può interagire con alcuni Componenti Hardware."@it .

<#DigitalLightModule>
    rdfs:subClassOf <#ComponentModule> ;
    rdfs:label "Digital Light Module (Brittany)", "Modulo di Luce Digitale (Brittany)"@it ;
    rdfs:comment "A Module that can interact with some Digital Light Hardware.", "Un Modulo che può interagire con alcuni componenti di Luce Digitale."@it .

# ----- Handlers -----

# TODO Add constraint:
# - OperationHandler MUST have a <#handlerName>
<#OperationHandler>
    rdfs:subClassOf dco:Function ;
    rdfs:label "Operation Handler (Brittany)", "Operation Handler (Brittany)"@it ;
    rdfs:comment "An operation that uses some arguments for a computation and returns an result.", "Un'operazione che utilizza degli argomenti per della computazione e ritorna un risultato."@it .

<#ComponentOperationHandler>
    rdfs:subClassOf <#OperationHandler> ;
    rdfs:label "Operation Handler (Brittany)", "Operation Handler (Brittany)"@it ;
    rdfs:comment "An Operation Handler that acts on certain Hardware Components.", "Un Operation Handler che agisce su Componenti Hardware."@it .

<#ActionOperationHandler>
    rdfs:subClassOf dco:ActuatingFunction ;
    rdfs:label "Action Operation Handler (Brittany)", "Action Operation Handler (Brittany)"@it ;
    rdfs:comment "An Operation Handler specifically used to execute an Action.", "Un Operation Handler specificatamente utilizzato per eseguire un Azione."@it .

<#PropertyOperationHandler>
    rdfs:subClassOf dco:SensingFunction ;
    rdfs:label "Property Operation Handler (Brittany)", "Property Operation Handler (Brittany)"@it ;
    rdfs:comment "An Operation Handler specifically used to retrieve a Property.", "Un Operation Handler specificatamente utilizzato per recuperare una Properietà."@it .

<#DigitalLightHandler>
    rdfs:subClassOf <#ComponentOperationHandler> ;
    rdfs:label "Digital Light Operation Handler (Brittany)", "Operation Handler per Luce Digitale (Brittany)"@it ;
    rdfs:comment "An Operation Handler that acts on Digital Lights.", "Un Operation Handler che agisce su Luci Digitali."@it .

<#IsOnDigitalLightHandler>
    rdfs:subClassOf <#DigitalLightHandler>, <#PropertyOperationHandler> ;
    rdfs:label "IsOn Digital Light Handler (Brittany)" ;
    rdfs:comment "An Operation Handler to check if the Digital Light is On.", "Un Operation Handler utilizzato per controllare se la Luce Digitale è accesa."@it ;
    dco:hasCommand dco:GetCommand.

<#TurnOnDigitalLightHandler>
    rdfs:subClassOf <#DigitalLightHandler>, <#ActionOperationHandler> ;
    rdfs:label "TurnOn Digital Light Handler (Brittany)" ;
    rdfs:comment "An Operation Handler to turn on the Digital Light.", "Un Operation Handler utilizzato per accendere la Luce Digitale."@it ;
    dco:hasCommand dco:OnCommand .

<#TurnOffDigitalLightHandler>
    rdfs:subClassOf <#DigitalLightHandler>, <#ActionOperationHandler> ;
    rdfs:label "TurnOff Digital Light Handler (Brittany)" ;
    rdfs:comment "An Operation Handler to turn off the Digital Light.", "Un Operation Handler utilizzato per spegnere la Luce Digitale."@it;
    dco:hasCommand dco:OffCommand .

# ----- ComponentsHw -----

<#ComponentHw>
    a rdfs:Class ;
    rdfs:label "Hardware Component (Brittany)", "Componente Hardware (Brittany)"@it ;
    rdfs:comment "A Hardware Component that can be used by an Operation Handler.", "Un Componente Hardware che può essere utilizzato da un Operation Handler."@it ;
    owl:equivalentClass m3:M2MDevice .

<#DigitalLightHw>
    rdfs:subClassOf <#ComponentHw> ;
    rdfs:label "Digital Light (Brittany)", "Luce Digitale (Brittany)"@it ;
    rdfs:comment "A Hardware Component that can be turned on and off and emits light. It is not possible to regulate the intensity or the color of the light.", "Un Componente Hardware che può essere spento ed acceso ed emette luce. Non possono essere regolati i valori di intensità e colore della luce."@it ;
    owl:equivalentClass m3:Lamp, dco:LightSwitch .

# ========================== RELATIONSHIPS (PROPERTIES) ==========================
# They define the existence of relationship between Concepts of the domain.

# TODO Add constraint:
# - only <#Environment> instances are allowed in rdf:range.
# - at least one environment is needed.
<#hasEnvironments>
    a rdf:Property ;
    rdf:domain <#Greenhouse> ;
    rdf:range rdf:Bag ;
    rdfs:label "Greenhouse contains Environments (Brittany)", "Serra contiene Ambienti (Brittany)"@it ;
    rdfs:comment "Composition property used to indicate that a Greenhouse is composed by one or more Environment.", "Proprietà di composizione utilizzata per indicare che una Serra è composta da uno o più Ambienti."@it .

# TODO Add constraint:
# - only <#BrittanyPlant> instances are allowed in rdf:range.
<#hasPlants>
    a rdf:Property ;
    rdf:domain <#Environment> ;
    rdf:range rdf:Bag ;
    rdfs:label "Environment contains Plants (Brittany)", "Ambiente contiene Piante (Brittany)"@it ;
    rdfs:comment "Composition property used to indicate that a Environments may contains Plants.", "Proprietà di composizione utilizzata per indicare che un Ambiente può contenere Piante."@it .

<#monitor>
    a rdf:Property ;
    rdf:domain <#Edge> ;
    rdf:range <#Monitorable> ;
    rdfs:label "Monitor (Brittany)", "Monitor (Brittany)"@it ;
    rdfs:comment "Property that indicates that an Edge device is placed in a Monitorable area.", "Proprietà che indica che un Edge è posizionato in un area Monitorabile."@it .

<#monitorPlant>
    rdfs:subPropertyOf <#monitor> ;
    rdf:range <#Plant> ;
    rdfs:label "Monitor Plant (Brittany)", "Monitor Pianta (Brittany)"@it ;
    rdfs:comment "Property that indicates that an Edge device is placed on a Plant.", "Proprietà che indica che un Edge è posizionato su una Pianta."@it .

<#monitorEnvironment>
    rdfs:subPropertyOf <#monitor> ;
    rdf:range <#Environment> ;
    rdfs:label "Monitor Environment (Brittany)", "Monitor Ambiente (Brittany)"@it ;
    rdfs:comment "Property that indicates that an Edge device is placed in an Environment.", "Proprietà che indica che un Edge è posizionato in un Ambiente."@it .

# TODO Add constraint:
# - only <#ComponentHw> instances are allowed in rdf:range.
# - at least one hwcomponent is needed.
<#hasComponents>
    a rdf:Property ;
    rdf:domain <#ComponentModule> ;
    rdf:range rdf:Bag ;
    rdfs:label "Components in Module (Brittany)", "Componenti in Modulo (Brittany)"@it ;
    rdfs:comment "Property that indicates that a Module acts on certain Hardware Components.", "Proprietà che indica che un Modulo agisce su certi Componenti Hardware."@it .

# TODO Add constraint:
# - only <#Module> instances are allowed in rdf:range.
# - at least one module is needed.
<#modules>
    a rdf:Property ;
    rdf:domain <#Edge> ;
    rdf:range rdf:Bag ;
    rdfs:label "Module in Edge (Brittany)", "Moduli in Edge (Brittany)"@it ;
    rdfs:comment "Composition property used to indicate that an Edge is composed by one or more Modules.", "Proprietà di composizione utilizzata per indicare che un Edge è composto da uno o più Moduli."@it .

<#edgeName>
    rdfs:subPropertyOf foaf:name ;
    rdf:domain <#Edge> ;
    rdfs:label "Edge Name (Brittany)", "Nome dell'Edge (Brittany)"@it .

<#moduleName>
    rdfs:subPropertyOf foaf:name ;
    rdf:domain <#Module> ;
    rdf:range <#ModuleName> ;
    rdfs:label "Module Name (Brittany)", "Nome del Modulo (Brittany)"@it .

<#handlerName>
    rdfs:subPropertyOf foaf:name ;
    rdf:domain <#OperationHandler> ;
    rdfs:label "Operation Handler Name (Brittany)", "Nome dell'Operation Handler (Brittany)"@it .

<#componentName>
    rdfs:subPropertyOf foaf:name;
    rdf:domain <#ComponentHw> ;
    rdfs:label "Component Name (Brittany)", "Nome del Componente (Brittany)"@it .

# TODO Add constraint:
# - only <#OperationHandler> instances are allowed in rdf:range.
# - at least one operation handler is needed.
<#handlers>
    a rdf:Property ;
    rdf:domain <#Module> ;
    rdf:range rdf:Bag ;
    rdfs:label "Operation Handlers in Module (Brittany)", "Operation Handlers in Modulo (Brittany)"@it ;
    rdfs:comment "Composition property used to indicate that a Module is composed by one or more Operation Handlers.", "Proprietà di composizione utilizzata per indicare che un Modulo è composto da uno o più Operation Handler."@it .

<#hasHandlerOutputType>
    a rdf:Property ;
    rdf:domain <#OperationHandler> ;
    rdf:range xsd:string ; # One of ["boolean", "integer", "number", "string", "object", "array", "null"]
    rdfs:label "Operation Handler Output Type (Brittany)", "Output Type dell'Operation Handler (Brittany)"@it .

<#hasHandlerInputSchema>
    a rdf:Property ;
    rdf:domain <#OperationHandler> ;
    rdf:range jsonschema:DataSchema ;
    rdfs:label "Operation Handler Input Schema (Brittany)", "Input Schema dell'Operation Handler (Brittany)"@it ;
    rdfs:seeAlso <https://www.w3.org/TR/wot-thing-description/#dataschema>.

# TODO Add constraint:
# - only one TD allowed.
<#hasThingDescriptor>
    a rdf:Property ;
    rdf:domain <#Edge> ;
    rdf:range td:Thing ;
    rdfs:label "Edge has Thing Descriptor (Brittany)", "Edge ha un Thing Descriptor (Brittany)"@it ;
    rdfs:comment "Property used to link an Edge to its Thing Descriptor (W3).", "Proprietà utilizzata per collegare un Edge al suo Thing Descriptor (W3)."@it .

# ========================== INDIVIDUALS & FACTS ==========================
# Elements of the set defined by Concepts.

<#angelo-greenhouse>
    a <#Greenhouse> ;
    foaf:name "Angelo's Greenhouse", "La serra di Angelo"@it ;
    <#hasEnvironments> [
        a rdf:Bag ;
        rdf:_1 <#angelo-environment>
    ].

<#angelo-environment>
    a <#Environment> ;
    foaf:name "Angelo's Environment #1", "Ambiente di Angelo #1"@it ;
    <#hasPlants> [
        a rdf:Bag ;
        rdf:_1 <#angelo-basil>
    ].

<#angelo-basil>
    a dbr:Basil ;
    foaf:name "Angelo's Basil", "Basilico di Angelo"@it .

<#angelo-edge>
    a <#Edge> ;
    <#monitorPlant> <#angelo-basil> ;
    <#modules> [
        a rdf:Bag ;
        rdf:_1 <#digital-light-module>
    ] ;
    <#edgeName> "Angelo's ESP8266", "ESP8266 di Angelo"@it ;
    <#hasThingDescriptor> <#td-mock-ip>.

<#digital-light-module>
    a <#DigitalLightModule> ;
    <#moduleName> "digital-light" ;
    <#handlers> [
        a rdf:Bag ;
        rdf:_1 [
            a <#IsOnDigitalLightHandler> ;
            <#handlerName> "isOn" ;
            <#hasHandlerOutputType> "boolean"
        ] ;
        rdf:_2 [
            a <#TurnOnDigitalLightHandler> ;
            <#handlerName> "turnOn" ;
            <#hasHandlerOutputType> "string"
        ] ;
        rdf:_3 [
            a <#TurnOffDigitalLightHandler> ;
            <#handlerName> "turnOff" ;
            <#hasHandlerOutputType> "string"
        ]
    ] ;
    <#hasComponents> [
        a rdf:Bag ;
        rdf:_1 [
            a <#DigitalLightHw> ;
            <#componentName> "digital-light-sx"
        ] ;
        rdf:_2 [
            a <#DigitalLightHw> ;
            <#componentName> "digital-light-dx"
        ]
    ] .

<#turn-off-digital-light-sx>
    td:hasForm [
        hctl:forContentType "application/json" ;
        hctl:hasTarget "td-mock-ip/turnOff?id=digital-light-sx"
    ] ;
    td:hasOutputSchema [ a jsonschema:StringSchema ] .

<#turn-off-digital-light-dx>
    td:hasForm [
        hctl:forContentType "application/json" ;
        hctl:hasTarget "td-mock-ip/turnOff?id=digital-light-dx"
    ] ;
    td:hasOutputSchema [ a jsonschema:StringSchema ] .

<#turn-on-digital-light-sx>
    td:hasForm [
        hctl:forContentType "application/json" ;
        hctl:hasTarget "td-mock-ip/turnOn?id=digital-light-sx"
    ] ;
    td:hasOutputSchema [ a jsonschema:StringSchema ] .

<#turn-on-digital-light-dx>
    td:hasForm [
        hctl:forContentType "application/json" ;
        hctl:hasTarget "td-mock-ip/turnOn?id=digital-light-dx"
    ] ;
    td:hasOutputSchema [ a jsonschema:StringSchema ] .

<#is-on-digital-light-sx>
    a jsonschema:BooleanSchema ;
    td:hasForm [
        hctl:forContentType "application/json";
        hctl:hasTarget "td-mock-ip/isOn?id=digital-light-sx"
    ] .

<#is-on-digital-light-dx>
    a jsonschema:BooleanSchema ;
    td:hasForm [
        hctl:forContentType "application/json";
        hctl:hasTarget "td-mock-ip/isOn?id=digital-light-dx"
    ] .

<#nosec-configuration>
    a wotsec:NoSecurityScheme ;
    td:hasConfigurationInstance <#no-sec> .

<#td-mock-ip>
    a td:Thing ;
    td:title "Angelo's ESP8266 TD" ;
    td:definesSecurityScheme <nosec-schema> ;
    td:hasSecurityConfiguration <#no-sec> ;
    td:hasActionAffordance <#turn-off-digital-light-sx>, <#turn-off-digital-light-dx>, <#turn-on-digital-light-sx>, <#turn-on-digital-light-dx> ;
    td:hasPropertyAffordance <#is-on-digital-light-sx>, <#is-on-digital-light-dx> .
